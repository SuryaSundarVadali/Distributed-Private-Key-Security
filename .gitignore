# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.env.local
.env.development
.env.production
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For PyCharm
#  Community Edition, use 'PyCharm CE' and for Professional Edition, use 'PyCharm Pro'.
.idea/

# VSCode
.vscode/
*.code-workspace

# Cryptographic System Specific Files
# ===================================

# Master seed files (NEVER commit these)
master.seed
*.seed
master_key.*
private_key.*
secret_key.*

# Cryptographic keys and certificates
*.pem
*.key
*.crt
*.csr
*.p12
*.pfx
*.jks

# HOTP/TOTP secrets
hotp_secret.*
totp_secret.*
*.secret

# Secret shares
shares/
*.share
share_*.dat

# Merkle tree data
merkle_*.dat
tree_data/

# Multi-party computation state
mpc_state/
mpc_*.dat

# Node-specific data
node_data/
node_*.db
node_state/

# Task scheduler state
scheduler_state/
task_queue.db
*.queue

# Docker specific
# ===============
.dockerignore
docker-compose.override.yml
docker-compose.prod.yml
*.override.yml

# Docker volumes and data
volumes/
data/
postgres_data/
redis_data/

# Container logs
logs/
*.log.*
container_logs/

# Performance and monitoring data
# ==============================
metrics/
monitoring/
performance_*.json
benchmark_*.txt
profiling/

# System state and persistence
# ============================
state/
persistence/
checkpoint/
snapshots/
*.checkpoint
*.snapshot

# Temporary files
# ==============
tmp/
temp/
*.tmp
*.temp
*.bak
*.backup
*.swp
*.swo
*~

# System files
# ============
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Development and testing
# ======================
test_data/
test_results/
test_output/
benchmark_results/
load_test_results/

# Generated configuration files
config_generated.json
runtime_config.yml
auto_config.*

# Network and communication
# ========================
certificates/
ssl/
tls/
ca_certificates/

# Database files
# =============
*.db
*.sqlite
*.sqlite3
database/
db_data/

# API keys and tokens
# ==================
api_keys.*
tokens.*
jwt_secret.*
oauth_secret.*

# Blockchain/Crypto specific
# =========================
wallets/
keystore/
mnemonic.*
recovery_phrase.*
private_keys/

# Build and deployment
# ===================
build/
dist/
deploy/
release/
artifacts/

# Security scanning results
# ========================
security_scan_*
vulnerability_report.*
audit_results/

# Research and documentation temp files
# ====================================
research_notes/
draft_*
*.draft
experimental/
playground/
sandbox/

# IDE and editor files
# ===================
*.sublime-project
*.sublime-workspace
*~
.vscode/
.idea/
*.swp
*.swo

# OS generated files
# =================
*.pid
*.seed
*.pid.lock
*.lock

# Custom application data
# ======================
user_data/
session_data/
cache/
.cache/

# Kubernetes
# ==========
*.kubeconfig
k8s-secrets/
helm-values.prod.yaml

# Terraform
# =========
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# Ansible
# =======
*.retry
host_vars/
group_vars/
inventory/production

# Miscellaneous
# ============
TODO.md
NOTES.md
experiments/
prototypes/